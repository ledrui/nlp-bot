"use strict";
/**
 * @module botbuilder-azure
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var CosmosDbKeyEscape;
(function (CosmosDbKeyEscape) {
    const illegalKeys = ['\\', '?', '/', '#', '\t', '\n', '\r', '*'];
    const illegalKeyCharacterReplacementMap = illegalKeys.reduce((map, c) => {
        map.set(c, `*${c.charCodeAt(0).toString(16)}`);
        return map;
    }, new Map());
    /**
    * Converts the key into a DocumentID that can be used safely with CosmosDB.
    * The following characters are restricted and cannot be used in the Id property: '/', '\', '?', '#'
    * More information at https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.documents.resource.id?view=azure-dotnet#remarks
     * @param key The provided key to be escaped.
     */
    function escapeKey(key) {
        if (!key) {
            throw new Error('The \'key\' parameter is required.');
        }
        const keySplitted = key.split('');
        const firstIllegalCharIndex = keySplitted.findIndex(((c) => illegalKeys.some((i) => i === c)));
        // If there are no illegal characters return immediately and avoid any further processing/allocations
        if (firstIllegalCharIndex === -1) {
            return key;
        }
        return keySplitted.reduce((result, c) => result + (illegalKeyCharacterReplacementMap.has(c) ? illegalKeyCharacterReplacementMap.get(c) : c), '');
    }
    CosmosDbKeyEscape.escapeKey = escapeKey;
})(CosmosDbKeyEscape = exports.CosmosDbKeyEscape || (exports.CosmosDbKeyEscape = {}));
//# sourceMappingURL=cosmosDbKeyEscape.js.map